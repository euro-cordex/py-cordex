# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: github testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - name: Set environment variables
      run: |
        echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
        echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
    - name: Cache conda
      uses: actions/cache@v2
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
          hashFiles('ci/requirements/**.yml') }}
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        #token: ${{ secrets.CODECOV_TOKEN }}
        #directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        #files: ./coverage1.xml,./coverage2.xml
        flags: unittests
        name: py-cordex
        #path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
